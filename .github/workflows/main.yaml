name: CI/CD with DockerHub (Windows)

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

jobs:
  integration:
    name: Continuous Integration
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Lint code
        run: echo "Linting repository"

      - name: Run unit tests
        run: echo "Running unit tests"

  build-and-push-dockerhub:
    name: Build & Push to DockerHub
    needs: integration
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/my-ml-project:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/my-ml-project:latest

  deploy:
    name: Deploy on Windows Self-Hosted Runner
    needs: build-and-push-dockerhub
    runs-on: self-hosted
    steps:
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Pull latest Docker image
        run: docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/my-ml-project:latest

      - name: Stop and remove existing container (if running)
        run: |
          docker ps -q --filter "name=ml-container" | ForEach-Object { docker stop $_; docker rm $_ }

      - name: Run new container
        run: docker run -d -p 8080:8080 --name=ml-container ${{ secrets.DOCKER_HUB_USERNAME }}/my-ml-project:latest

      - name: Clean up unused images/containers
        run: docker system prune -f
